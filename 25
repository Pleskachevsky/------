'''Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:

— символ «?» означает ровно одну произвольную цифру;

— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

Среди натуральных чисел, не превышающих 10**9, найдите все числа, соответствующие маске 12345?7?8, делящиеся на число 23 без остатка.

В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце  — соответствующие им результаты деления этих чисел на 23.


Количество строк в таблице для ответа избыточно.'''

from fnmatch import *
for x in range(23, 10**9, 23):
  if fnmatch(str(x), "12345?7?8"):
    print(x, x //23)

'''Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:

— символ «?» означает ровно одну произвольную цифру;

— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 1?2157*4, делящиеся на 2024 без остатка. В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце  — соответствующие им результаты деления этих чисел на 2024.

Количество строк в таблице для ответа избыточно.'''

from fnmatch import *
for x in range(2024, 10**10, 2024):
  if fnmatch(str(x), "1?2157*4"):
    print(x, x // 2024)

'''Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:

— символ «?» означает ровно одну произвольную цифру;

— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

Среди натуральных чисел, не превышающих 10**10, найдите все числа, соответствующие маске 1?2157*4, делящиеся на 2024 без остатка. В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце  — соответствующие им результаты деления этих чисел на 2024.

Количество строк в таблице для ответа избыточно.

1?21570004
10000000000
'''

mas = []

for x in range(10):
  s = "1" + str(x) + '21574'
  s = int(s)
  if s < 10**10 and s % 2024 == 0:
    mas.append(s)

for x in range(10):
  for y in range(10):
    s = "1" + str(x) + '2157' + str(y) + '4'
    s = int(s)
    if s < 10**10 and s % 2024 == 0:
      mas.append(s)

for x in range(10):
  for y in range(100):
    s = "1" + str(x) + '2157' + str(y) + '4'
    s = int(s)
    if s < 10**10 and s % 2024 == 0:
      mas.append(s)

for x in range(10):
  for y in range(1000):
    s = "1" + str(x) + '2157' + str(y) + '4'
    s = int(s)
    if s < 10**10 and s % 2024 == 0:
      mas.append(s)

mas.sort()
for i in range(len(mas)):
  print(mas[i], mas[i]//2024)

'''Маска числа  — это последовательность цифр, в которой могут встречаться специальные символы «?» и «*». Символ «?» означает ровно одну произвольную цифру, символ «*» означает произвольную (в том числе пустую) последовательность цифр.

Пример. Маске 123*4?5 соответствуют числа 123405 и 12376415. Найдите все натуральные числа, не превышающие 10**9, которые соответствуют маске 12*63?5? и при этом без остатка делятся на 3123.

В ответе запишите все найденные числа в порядке возрастания.'''

from fnmatch import *
for x in range(3123, 10**9, 3123):
  if fnmatch(str(x), "12*63?5?"):
    print(x)

'''Маска числа  — это последовательность цифр, в которой могут встречаться специальные символы «?» и «*». Символ «?» означает ровно одну произвольную цифру, символ «*» означает произвольную (в том числе пустую) последовательность цифр.



Пример. Маске 123*4?5 соответствуют числа 123405 и 12376415.

Найдите все натуральные числа, не превышающие 10**10, которые соответствуют маске 1?7246*1 и при этом без остатка делятся на 4173.

В ответе запишите все найденные числа в порядке возрастания.'''

from fnmatch import *
for x in range(4173, 10**10, 4173):
  if fnmatch(str(x), "1?7246*1"):
    print(x)

"""Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95650], числа, имеющие ровно шесть различных нечётных натуральных делителей (при этом количество четных делителей может быть любым). Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки. Делители в строке должны следовать в порядке возрастания.

Например, в диапазоне [2; 48] ровно шесть нечётных различных натуральных делителей имеет число 45, поэтому для этого диапазона вывод на экране должна содержать следующие значения: 1 3 5 9 15 45;

в диапазоне [480; 489] ровно шесть нечётных различных натуральных делителей имеет число 486, поэтому для этого диапазона вывод на экране должна содержать следующие значения: 1 3 9 27 81 243."""


for x in range(95632, 95651):
  deli = []
  for y in range(1, 95651):
    if x % y == 0 and y % 2 != 0:
      deli.append(y)
  if len(deli) == 6:
    print(*deli)


"""Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [245 690; 245 756] простые числа. Выведите на экран все найденные простые числа в порядке возрастания, слева от каждого числа выведите его порядковый номер в последовательности. Каждая пара чисел должна быть выведена в отдельной строке.

Примечание. Простое число  — натуральное число, имеющее ровно два различных натуральных делителя  — единицу и самого себя."""

c = 0
for a in range (245_690, 245_757):
  c += 1
  deli = []
  for x in range(2, a + 1):
    if a % x == 0:
      deli.append(x)
  if len(deli) == 1:
    print(c, *deli)

"""Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [174457; 174505], числа, имеющие ровно два различных натуральных делителя, не считая единицы и самого числа. Для каждого найденного числа запишите эти два делителя в таблицу на экране с новой строки в порядке возрастания произведения этих двух делителей. Делители в строке таблицы также должны следовать в порядке возрастания."""

for x in range(174457, 174506):
  mas = []
  for y in range(2, x + 1):
    if x % y == 0 and x != y:
      mas.append(y)
  if len(mas) == 2:
    print(*mas)

'''Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [84052; 84130], число, имеющее максимальное количество различных натуральных делителей, если таких чисел несколько  — найдите минимальное из них. Выведите на экран количество делителей такого числа и само число.

Например, в диапазоне [2; 48] максимальное количество различных натуральных делителей имеет число 48, поэтому для этого диапазона вывод на экране должна содержать следующие значения:

10 48'''


maxx = 0
for x in range(84052, 84130 + 1):
  mas = []
  for y in range(1, x + 1):
    if x % y == 0:
      mas.append(y)
  if len(mas) > maxx:
    maxx = len(mas)
    print(max(mas), len(mas))

'''Напишите программу, которая перебирает четные числа, большие 600000, в порядке возрастания и ищет среди них такие, у которых есть натуральный делитель, оканчивающийся на цифру 7 и не равный ни самому числу, ни числу 7. В ответе запишите в первой строке таблицы первые пять найденных чисел в порядке возрастания, а во втором столбце - наименьший делитель для каждого из них, оканчивающийся цифрой 7, не равный ни самому числу, ни числу 7.
Количество строк в таблице для ответа избыточно.'''

c = 0
for x in range(600000, 700000, 2):
  mas = []
  for y in range(17, x+1):
    if x % y == 0 and y % 10 == 7:
      mas.append(y)
      c += 1
      print(x, *mas)
      break
  if c == 5:
      break



'''Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [120115; 120200], число, имеющее максимальное количество различных натуральных делителей, если таких чисел несколько  — найдите максимальное из них. Выведите на экран количество делителей такого числа и само число.

Например, в диапазоне [80; 90] максимальное количество различных натуральных делителей имеет число 90, поэтому для этого диапазона вывод на экране должна содержать следующие значения:

12 90'''
maxx = 0
for x in range(120115, 120201):
  mas = []
  for y in range(1, x + 1):
    if x % y == 0:
      mas.append(y)
  if len(mas) > maxx:
    maxx = len(mas)
    print(max(mas), len(mas))


# Назовём  маской  числа  последовательность  цифр,  в  которой  также  могут встречаться следующие символы:
# –  символ «?» означает ровно одну произвольную цифру;
# –  символ  «*»  означает  любую  последовательность  цифр  произвольной длины;
# в том числе «*» может задавать и пустую последовательность. Например, маске 123*4?5 
# соответствуют числа 123405 и 12300405. Среди  натуральных  чисел,  не  превышающих  10**10, 
# найдите  все  числа, соответствующие маске 3?12?14*5, делящиеся на 1917 без остатка.
# В  ответе  запишите  в  первом  столбце  таблицы  все  найденные  числа в  порядке  возрастания, 
# а  во  втором  столбце  –  соответствующие  имрезультаты деления этих чисел на 1917.
# Количество строк в таблице для ответа избыточно

from fnmatch import *
for x in range(1917, 10**10, 1917):
    if fnmatch(str(x), "3?12?14*5"):
        print(x, x//1917)