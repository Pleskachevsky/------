------------------------------------------------------------------------------
----------------------------Подсчет кол-ва путей------------------------------
------------------------------------------------------------------------------


'''У исполнителя Калькулятор две команды, которым присвоены номера:

1.  прибавь 2,
2.  умножь на 5.

Первая из них увеличивает число на экране на 2, вторая  — увеличивает его в 5 раз.
Программа для Калькулятора  — это последовательность команд.
Сколько есть программ, которые число 2 преобразуют в число 50?'''

def f(x, y):
  if x > y:
    return 0
  if x == y:
    return 1
  if x < y:
    return f(x + 2, y) + f(x * 5, y)
print(f(2, 50))


'''У исполнителя Прибавитель две команды, которым присвоены номера:

1.  прибавь 1,
2.  увеличь старшую цифру числа на 1.

Первая из них увеличивает число на экране на 1, вторая увеличивает на 1 старшую (левую) цифру числа, например число 23 с помощью такой команды превратится в число 33. Если старшая цифра числа равна 9, то вторая команда оставляет это число неизменным. Программа для Прибавителя  — это последовательность команд. Сколько есть программ, которые число 35 преобразуют в число 57?'''

def f(x, y):
  if x > y:
    return 0
  elif x == y:
    return 1
  elif x < y:
    return f(x + 1, y) + f(x + 10, y)
print(f(35, 57))

'''Исполнитель Осень16 преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:

1)  Прибавить 1;
2)  Прибавить 2;
3)  Прибавить 4.

Первая команда увеличивает число на экране на 1, вторая увеличивает его на 2, третья  — увеличивает на 4.

Программа для исполнителя Осень16  — это последовательность команд.

Сколько существует программ, для которых при исходном числе 1 результатом является число 15 и при этом траектория вычислений содержит число 8?'''
def f(x, y): 
  if x > y:
    return 0
  elif x == y:
    return 1
  elif x < y:
    return f(x + 1, y) + f(x + 2, y) + f(x + 4, y)

print(f(1, 8) * f(8, 15))

'''Исполнитель Тренер преобразует число на экране.

У исполнителя есть две команды, которым присвоены номера:

1. Прибавить 1
2. Умножить на 2

Первая команда увеличивает число на экране на 1, вторая умножает его на 2. Программа для исполнителя Тренер  —  это последовательность команд.

Сколько существует программ, которые преобразуют исходное число 1 в число 40 и при этом траектория вычислений содержит числа 12 и 25?'''
def f(x, y):
  if x > y:
    return 0
  elif x == y:
    return 1
  elif x < y:
    return f(x + 1, y) + f(x * 2, y)

print(f(1, 12) * f(12,25) * f(25,40))



'''Исполнитель НечетМ преобразует число на экране. У исполнителя НечетМ две команды, которым присвоены номера:



1. прибавь 1

2. сделай нечётное



Первая из этих команд увеличивает число x на экране на 1, вторая переводит число x в число 2x+1. Например, вторая команда переводит число 10 в число 21. Программа для исполнителя НечетМ – это последовательность команд. Сколько существует таких программ, которые число 1 преобразуют в число 27, причём траектория вычислений не содержит число 26? Траектория вычислений программы – это последовательность результатов выполнения всех команд программы. Например, для программы 121 при исходном числе 7 траектория будет состоять из чисел 8, 17, 18.'''

def f(x, y):
  if x > y or x == 26:
    return 0
  elif x == y:
    return 1
  elif x < y:
    return f(x + 1, y) + f(2*x + 1, y)

print(f(1, 27))

'''Исполнитель преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:

1. Прибавить 1

2.  Умножить на 2

3.  Возвести в квадрат

Программа для исполнителя  — это последовательность команд.

Сколько существует программ, для которых при исходном числе 2 результатом является число 20, при этом траектория вычислений не содержит числа 11?

Траектория вычислений программы  — это последовательность результатов выполнения всех команд программы. Например, для программы 321 при исходном числе 4 траектория будет состоять из чисел 16, 32, 33.'''

def f(x, y):
  if x > y or x == 11:
    return 0
  elif x == y:
    return 1
  elif x < y:
    return f(x + 1, y) + f(x * 2, y) + f(x**2, y)

print(f(2, 20))


'''Исполнитель Вычислитель преобразует число на экране.

У исполнителя есть две команды, которым присвоены номера:

1. Прибавить 1.

2. Умножить на 2.

Первая команда увеличивает число на экране на 1, вторая умножает его на 2.

Программа для Вычислителя  — это последовательность команд.

Сколько существует программ, для которых при исходном числе 1 результатом является число 21 и при этом траектория вычислений содержит число 10 и не содержит числа 16?

Траектория вычислений программы  — это последовательность результатов выполнения всех команд программы. Например, для программы 121 при исходном числе 7 траектория будет состоять из чисел 8, 16, 17.'''

def f(x, y):
  if x > y or x == 16:
    return 0
  elif x == y:
    return 1
  elif x < y:
    return f(x + 1, y) + f(x * 2, y)

print(f(1, 10) * f(10, 21))



'''Исполнитель Увеличитель преобразует число на экране.

У исполнителя есть две команды, которым присвоены номера:

1.  Вычти 1;
2.  Найди целую часть от деления на 2.

Первая из них уменьшает число на экране на 1, вторая заменяет число на экране на целую часть от деления числа на 2.

Программа для исполнителя  — это последовательность команд.

При исходном числе 45 результатом является число 3, и при этом траектория вычислений содержит число 15 и не содержит 5. Сколько таких программ существует?

Траектория вычислений программы  — это последовательность результатов выполнения всех команд программы. Например, для программы 122 при исходном числе 10 траектория состоит из чисел 9, 4, 2.'''

def f(x, y):
  if x < y or x == 5:
    return 0
  elif x == y:
    return 1
  elif x > y:
    return f(x - 1, y) + f(x // 2, y)

print(f(45, 15) * f(15, 3))

'''Исполнитель U18 преобразует число, записанное на экране. У исполнителя есть три команды,
которым присвоены номера:
1. Вычесть 1
2. Вычесть 3
3. Взять остаток от деления на 4
Команда 3 выполняется только для чисел, больших, чем 4. Программа для исполнителя U18 – это
последовательность команд.
Сколько существует таких программ, которые исходное число 22 преобразуют в число 2?'''

def Z(n):
 if n>4:
  n %=4
  return n
 else:
  return 0

def f(x,y):
 if x<y:
  return 0
 if x == y:
  return 1
 else:
  return f(x-1,y) + f(x-3,y) + f(Z(x),y)
print(f(22,2))



